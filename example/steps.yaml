- key: storage_strategy
  title: "Storage Strategy"
  fields:
    - "hub.storage.type"
  next:
    if:
      - field: "hub.storage.type"
        type: equality
        check_against: 'internal'
    then: decide_pvc_strategy
    else: locate_external_db

- key: locate_external_db
  title: "External Database"
  fields:
    - "hub.storage.external_db_host"
    - "hub.storage.external_db_port"
    - "hub.storage.external_db_user"
    - "hub.storage.external_db_password"
  res:
    - 'Secret:hub-pg'
  next: done

- key: decide_pvc_strategy
  title: "PVC Strategy"
  fields:
    - "hub.storage.managed_pvc"
  next:
    if:
      - field: "hub.storage.managed_pvc"
        type: equality
        check_against: 'true'
    then: set_db_secrets
    else: locate_external_pvc

- key: locate_external_pvc
  title: "Self-Managed PVC"
  fields:
    - "hub.storage.pvc_name"
  next: set_db_secrets

- key: set_db_secrets
  title: "Internal DB Credentials"
  fields:
    - "hub.storage.secrets.user"
    - "hub.storage.secrets.password"
  ephemeral: true
  next: done
  res:
    - "Secret:hub-pg"
    - "PersistentVolumeClaim:*"
    - "Deployment:postgres"
    - "Service:postgres"




#---------------------------BACKUPS-----------------------------




- key: backups_strategy
  title: "Backups Strategy"
  fields:
    - "hub.backups.type"
  next: done





#---------------------------APPLICATION-----------------------------




- key: encryption
  title: "Encryption"
  fields:
    - "hub.backend.secrets.key_base"
    - "hub.backend.secrets.attr_enc_key"
    - "hub.backend.encrypted_tables"
  res:
    - "Secret:hub-app"
  next: availability

- key: availability
  title: "Availability"
  fields:
    - "hub.backend.num_users"
    - "hub.backend.response_time"
  res:
    - "Deployment:hub"
    - "Deployment:hub-front"
  next: done





#---------------------------NETWORKING-----------------------------




- key: network_strategy
  title: "Networking Strategy"
  fields:
    - "hub.networking.strategy"
  next:
    if:
      - field: "hub.networking.strategy"
        type: equality
        check_against: 'ingress'
    then: networking_host
    else: done

- key: networking_host
  title: "Hosting"
  fields:
    - hub.networking.host
    - hub.networking.path
  res:
    - Ingress:*
    - Service:*
  next: done
