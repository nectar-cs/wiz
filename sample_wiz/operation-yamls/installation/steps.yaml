key: installation.storage_strategy
kind: Step
title: "Storage Strategy"
fields:
  - "hub.storage.type"
next:
  if:
    - field: "hub.storage.type"
      type: equality
      check_against: 'internal'
  then: installation.decide_pvc_strategy
  else: installation.locate_external_db


---


key: installation.locate_external_db
kind: Step
title: "External Database"
fields:
  - "hub.storage.external_db_host"
  - "hub.storage.external_db_port"
  - "hub.storage.external_db_user"
  - "hub.storage.external_db_password"
res:
  - 'Secret:hub-pg'
next: done


---


key: installation.decide_pvc_strategy
kind: Step
title: "PVC Strategy"
fields:
  - "hub.storage.managed_pvc"
next:
  if:
    - field: "hub.storage.managed_pvc"
      type: equality
      check_against: 'true'
  then: installation.set_db_secrets

  else: installation.locate_external_pvc


---


key: installation.locate_external_pvc
kind: Step
title: "Self-Managed PVC"
fields:
  - "hub.storage.pvc_name"
next: installation.set_db_secrets


---


key: installation.set_db_secrets
kind: Step
title: "Internal DB Credentials"
fields:
  - "hub.storage.secrets.user"
  - "hub.storage.secrets.password"
ephemeral: true
next: done
res:
  - "Secret:hub-pg"
  - "PersistentVolumeClaim:*"
  - "Deployment:postgres"
  - "Service:postgres"


--- #---------------------------BACKUPS-----------------------------


key: installation.backups_strategy
kind: Step
title: "Backups Strategy"
fields:
  - "hub.backups.type"
next: done


--- #---------------------------APPLICATION-----------------------------


key: installation.encryption
kind: Step
title: "Encryption"
fields:
  - "hub.backend.secrets.key_base"
  - "hub.backend.secrets.attr_enc_key"
  - "hub.backend.encrypted_tables"
res:
  - "Secret:hub-app"
next: installation.availability

---

key: installation.availability
kind: Step
title: "Availability"
fields:
  - "hub.backend.num_users"
  - "hub.backend.response_time"
res:
  - "Deployment:hub"
  - "Deployment:hub-front"
next: done


--- #---------------------------NETWORKING-----------------------------


key: installation.network_strategy
kind: Step
title: "Networking Strategy"
fields:
  - "hub.networking.strategy"
next:
  if:
    - field: "hub.networking.strategy"
      type: equality
      check_against: 'ingress'
  then: installation.networking_host
  else: done


---


key: installation.networking_host
kind: Step
title: "Hosting"
fields:
  - hub.networking.host
  - hub.networking.path
res:
  - Ingress:*
  - Service:*
next: done
