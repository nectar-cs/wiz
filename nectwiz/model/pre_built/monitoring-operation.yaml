kind: Stage
id: nectar.stages.monitoring
title: Locate Monitoring Server
info: The wiz gets better when it can read monitoring data.
steps:
  - id: nectar.steps.monitoring-step-1
    fields:
      - id: monitoring.type
        target: prefs
        title: Data Source Type
        input:
          kind: SelectInput
          options:
            - id: prometheus
              title: Prometheus Server
            - id: metrics_server
              title: Metrics Server
            - id: fluentd
              title: fluentd
            - id: cadvisor
              title: cAdvisor
        validation:
          - check_against: prometheus
            tone: error
            reason: "Not yet supported"

      - id: monitoring.proxy
        target: prefs
        title: Reach via Kubernetes Proxy
        input: CheckboxInput
        show_condition:
          check_against: prometheus

      - id: monitoring.url
        target: prefs
        title: Data Source API's Base URL
        info: "If in-cluster, use the Kubernetes
        DNS scheme: http://<svc-name>.<ns>"
        show_condition:
          challenge: "{input/monitoring.proxy}"
          check_against: false
        validation:
          - kind: FormatPredicate
            check_against: domain
          - challenge:
              kind: HttpGetter
              endpoint: "{value}"
              property: status_code
            check_against: 200
            reason: "Endpoint did not return status code 200"

      - id: monitoring.service_namespace
        target: prefs
        title: Namespace containing Prometheus Operator
        show_condition:
          challenge: "{input/monitoring.proxy}"
          check_against: true
        default: "{app/ns}"
        input:
          kind: SelectInput
          options:
            kind: ResourcesGetter
            selector: "ns:*"

      - id: monitoring.service_name
        target: prefs
        title: Prometheus Operator Service
        show_condition:
          challenge: "{input/monitoring.proxy}"
          check_against: true
        input:
          kind: SelectInput
          options:
            kind: ResourcesGetter
            selector:
              k8s_kind: Service
              namespace: "{input/monitoring.service_namespace}"